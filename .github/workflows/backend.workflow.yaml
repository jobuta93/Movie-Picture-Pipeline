name: Build and deploy backend

env:
  APP_NAME: Udacity Backend
  IMAGE_TAG: 267769458268.dkr.ecr.us-east-1.amazonaws.com/backend:v1
  SRC_DIR: src/backend
  DOCKER_URL: 267769458268.dkr.ecr.us-east-1.amazonaws.com
  AWS_REGION: us-east-1

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup python3
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Update package
        run: |
          sudo apt update && \
          sudo apt install \
          && python -m pip install flake8 \
          && pip3 install pipenv

      - name: Install dependencies
        working-directory: ${{ env.SRC_DIR }}
        run: pipenv install

      - name: Test (simulate a failure)
        working-directory: ${{ env.SRC_DIR }}
        run: pipenv run test

      - name: Lint
        working-directory: ${{ env.SRC_DIR }}
        run: pipenv run lint

  build:
    runs-on: ubuntu-latest
    needs: tests
    if: ${{ failure() == false }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image
        run: |
          docker buildx build --platform linux/amd64 --tag ${{ env.IMAGE_TAG }} ./${{ env.SRC_DIR }}

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set aws_session_token ${{ secrets.AWS_SESSION_TOKEN }}
          aws configure set default.region $AWS_REGION


      - name: Log in to Docker Hub
        run: aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $DOCKER_URL

      - name: Push Docker image
        run: |
          docker push ${{ env.IMAGE_TAG }}
